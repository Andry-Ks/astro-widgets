"use strict";

const numStars = 100; //–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑—ñ—Ä–æ–∫
const starsContainer = document.getElementById('stars');
//–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑—ñ—Ä–æ–∫
for (let i = 0; i < numStars; i++) {
    const star = document.createElement('div');
    star.className = 'star';
    //–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è –∑—ñ—Ä–∫–∏-–≤–∏–ø–∞–¥–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –≤—ñ–¥ 0% –¥–æ 100% –≤–∏—Å–æ—Ç–∏ –µ–∫—Ä–∞–Ω—É
    star.style.top = `${Math.random() * 100}vh`; 
    star.style.left = `${Math.random() * 100}vw`;
    //star.style.animationDelay = `${Math.random() * 5}s`; //–í–∏–ø–∞–¥–∫–æ–≤–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º –∞–Ω—ñ–º–∞—Ü—ñ—ó
    starsContainer.appendChild(star); //–î–æ–¥–∞—î–º–æ –∑—ñ—Ä–∫–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä .stars
}

// –ú–∞–≥–Ω—ñ—Ç–Ω–∞ –±—É—Ä—è üåû
async function fetchMagneticStormData() {
  try {
      const response = await fetch('/api/k-index');
      const data = await response.json();

      const stormTime = new Date(data.time);
      document.getElementById('storm-time').textContent = `Last updated: ${stormTime.toLocaleString()}`;

      const kp = data.kp;
      let kpColor;

      if (kp >= 7) {
          kpColor = 'rgb(254, 65, 65)';
      } else if (kp >= 5) {
          kpColor = 'rgb(254, 251, 65)';
      } else {
          kpColor = 'rgb(109, 254, 65)';
      }

      const kpElement = document.getElementById('storm-kp');
      kpElement.textContent = `Planetary K index: ${kp}`;
      kpElement.style.color = kpColor;

  } catch (error) {
      console.error('Error fetching magnetic storm data:', error);
      document.getElementById('storm-time').textContent = 'Error loading storm data.';
  }
}

fetchMagneticStormData();